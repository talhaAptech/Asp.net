//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace ajaxx.conver {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ConverterSoap", Namespace="http://tempuri.org/")]
    public partial class Converter : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConversionRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConversionAmountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCultureInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertDataTableColumnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastUpdateDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Converter() {
            this.Url = global::ajaxx.Properties.Settings.Default.ajaxx_conver_Converter;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCurrenciesCompletedEventHandler GetCurrenciesCompleted;
        
        /// <remarks/>
        public event GetCurrencyRateCompletedEventHandler GetCurrencyRateCompleted;
        
        /// <remarks/>
        public event GetCurrencyRatesCompletedEventHandler GetCurrencyRatesCompleted;
        
        /// <remarks/>
        public event GetConversionRateCompletedEventHandler GetConversionRateCompleted;
        
        /// <remarks/>
        public event GetConversionAmountCompletedEventHandler GetConversionAmountCompleted;
        
        /// <remarks/>
        public event GetCultureInfoCompletedEventHandler GetCultureInfoCompleted;
        
        /// <remarks/>
        public event ConvertDataTableColumnCompletedEventHandler ConvertDataTableColumnCompleted;
        
        /// <remarks/>
        public event GetLastUpdateDateCompletedEventHandler GetLastUpdateDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrencies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCurrencies() {
            object[] results = this.Invoke("GetCurrencies", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync() {
            this.GetCurrenciesAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync(object userState) {
            if ((this.GetCurrenciesOperationCompleted == null)) {
                this.GetCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrenciesOperationCompleted);
            }
            this.InvokeAsync("GetCurrencies", new object[0], this.GetCurrenciesOperationCompleted, userState);
        }
        
        private void OnGetCurrenciesOperationCompleted(object arg) {
            if ((this.GetCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrenciesCompleted(this, new GetCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrencyRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetCurrencyRate(string Currency, System.DateTime RateDate) {
            object[] results = this.Invoke("GetCurrencyRate", new object[] {
                        Currency,
                        RateDate});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyRateAsync(string Currency, System.DateTime RateDate) {
            this.GetCurrencyRateAsync(Currency, RateDate, null);
        }
        
        /// <remarks/>
        public void GetCurrencyRateAsync(string Currency, System.DateTime RateDate, object userState) {
            if ((this.GetCurrencyRateOperationCompleted == null)) {
                this.GetCurrencyRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyRateOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyRate", new object[] {
                        Currency,
                        RateDate}, this.GetCurrencyRateOperationCompleted, userState);
        }
        
        private void OnGetCurrencyRateOperationCompleted(object arg) {
            if ((this.GetCurrencyRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyRateCompleted(this, new GetCurrencyRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrencyRates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurrencyRates(System.DateTime RateDate) {
            object[] results = this.Invoke("GetCurrencyRates", new object[] {
                        RateDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyRatesAsync(System.DateTime RateDate) {
            this.GetCurrencyRatesAsync(RateDate, null);
        }
        
        /// <remarks/>
        public void GetCurrencyRatesAsync(System.DateTime RateDate, object userState) {
            if ((this.GetCurrencyRatesOperationCompleted == null)) {
                this.GetCurrencyRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyRatesOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyRates", new object[] {
                        RateDate}, this.GetCurrencyRatesOperationCompleted, userState);
        }
        
        private void OnGetCurrencyRatesOperationCompleted(object arg) {
            if ((this.GetCurrencyRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyRatesCompleted(this, new GetCurrencyRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConversionRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetConversionRate(string CurrencyFrom, string CurrencyTo, System.DateTime RateDate) {
            object[] results = this.Invoke("GetConversionRate", new object[] {
                        CurrencyFrom,
                        CurrencyTo,
                        RateDate});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetConversionRateAsync(string CurrencyFrom, string CurrencyTo, System.DateTime RateDate) {
            this.GetConversionRateAsync(CurrencyFrom, CurrencyTo, RateDate, null);
        }
        
        /// <remarks/>
        public void GetConversionRateAsync(string CurrencyFrom, string CurrencyTo, System.DateTime RateDate, object userState) {
            if ((this.GetConversionRateOperationCompleted == null)) {
                this.GetConversionRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConversionRateOperationCompleted);
            }
            this.InvokeAsync("GetConversionRate", new object[] {
                        CurrencyFrom,
                        CurrencyTo,
                        RateDate}, this.GetConversionRateOperationCompleted, userState);
        }
        
        private void OnGetConversionRateOperationCompleted(object arg) {
            if ((this.GetConversionRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConversionRateCompleted(this, new GetConversionRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConversionAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetConversionAmount(string CurrencyFrom, string CurrencyTo, System.DateTime RateDate, decimal Amount) {
            object[] results = this.Invoke("GetConversionAmount", new object[] {
                        CurrencyFrom,
                        CurrencyTo,
                        RateDate,
                        Amount});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetConversionAmountAsync(string CurrencyFrom, string CurrencyTo, System.DateTime RateDate, decimal Amount) {
            this.GetConversionAmountAsync(CurrencyFrom, CurrencyTo, RateDate, Amount, null);
        }
        
        /// <remarks/>
        public void GetConversionAmountAsync(string CurrencyFrom, string CurrencyTo, System.DateTime RateDate, decimal Amount, object userState) {
            if ((this.GetConversionAmountOperationCompleted == null)) {
                this.GetConversionAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConversionAmountOperationCompleted);
            }
            this.InvokeAsync("GetConversionAmount", new object[] {
                        CurrencyFrom,
                        CurrencyTo,
                        RateDate,
                        Amount}, this.GetConversionAmountOperationCompleted, userState);
        }
        
        private void OnGetConversionAmountOperationCompleted(object arg) {
            if ((this.GetConversionAmountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConversionAmountCompleted(this, new GetConversionAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCultureInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCultureInfo(string Currency) {
            object[] results = this.Invoke("GetCultureInfo", new object[] {
                        Currency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCultureInfoAsync(string Currency) {
            this.GetCultureInfoAsync(Currency, null);
        }
        
        /// <remarks/>
        public void GetCultureInfoAsync(string Currency, object userState) {
            if ((this.GetCultureInfoOperationCompleted == null)) {
                this.GetCultureInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCultureInfoOperationCompleted);
            }
            this.InvokeAsync("GetCultureInfo", new object[] {
                        Currency}, this.GetCultureInfoOperationCompleted, userState);
        }
        
        private void OnGetCultureInfoOperationCompleted(object arg) {
            if ((this.GetCultureInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCultureInfoCompleted(this, new GetCultureInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertDataTableColumn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConvertDataTableColumn(ref System.Data.DataSet ds, int TableIndex, string ColumnName, string FromCurrency, string ToCurrency) {
            object[] results = this.Invoke("ConvertDataTableColumn", new object[] {
                        ds,
                        TableIndex,
                        ColumnName,
                        FromCurrency,
                        ToCurrency});
            ds = ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertDataTableColumnAsync(System.Data.DataSet ds, int TableIndex, string ColumnName, string FromCurrency, string ToCurrency) {
            this.ConvertDataTableColumnAsync(ds, TableIndex, ColumnName, FromCurrency, ToCurrency, null);
        }
        
        /// <remarks/>
        public void ConvertDataTableColumnAsync(System.Data.DataSet ds, int TableIndex, string ColumnName, string FromCurrency, string ToCurrency, object userState) {
            if ((this.ConvertDataTableColumnOperationCompleted == null)) {
                this.ConvertDataTableColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertDataTableColumnOperationCompleted);
            }
            this.InvokeAsync("ConvertDataTableColumn", new object[] {
                        ds,
                        TableIndex,
                        ColumnName,
                        FromCurrency,
                        ToCurrency}, this.ConvertDataTableColumnOperationCompleted, userState);
        }
        
        private void OnConvertDataTableColumnOperationCompleted(object arg) {
            if ((this.ConvertDataTableColumnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertDataTableColumnCompleted(this, new ConvertDataTableColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastUpdateDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLastUpdateDate() {
            object[] results = this.Invoke("GetLastUpdateDate", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastUpdateDateAsync() {
            this.GetLastUpdateDateAsync(null);
        }
        
        /// <remarks/>
        public void GetLastUpdateDateAsync(object userState) {
            if ((this.GetLastUpdateDateOperationCompleted == null)) {
                this.GetLastUpdateDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastUpdateDateOperationCompleted);
            }
            this.InvokeAsync("GetLastUpdateDate", new object[0], this.GetLastUpdateDateOperationCompleted, userState);
        }
        
        private void OnGetLastUpdateDateOperationCompleted(object arg) {
            if ((this.GetLastUpdateDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastUpdateDateCompleted(this, new GetLastUpdateDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrenciesCompletedEventHandler(object sender, GetCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrencyRateCompletedEventHandler(object sender, GetCurrencyRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrencyRatesCompletedEventHandler(object sender, GetCurrencyRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConversionRateCompletedEventHandler(object sender, GetConversionRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConversionRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConversionRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetConversionAmountCompletedEventHandler(object sender, GetConversionAmountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConversionAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConversionAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCultureInfoCompletedEventHandler(object sender, GetCultureInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCultureInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCultureInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConvertDataTableColumnCompletedEventHandler(object sender, ConvertDataTableColumnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertDataTableColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertDataTableColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLastUpdateDateCompletedEventHandler(object sender, GetLastUpdateDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastUpdateDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastUpdateDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591